# Copyright (c) 2020-2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/green.gni")
import("//build_overrides/support.gni")

import("${build_root}/config/compiler/compiler.gni")
import("${chip_root}/build/chip/tests.gni")
import("${chip_root}/src/platform/device.gni")

config("green-config") {
  include_dirs = [
    "${green_root}/include",
  ]
}

static_library("green") {
  sources = [ "green.cpp" ]
  public_configs = [":green-config"]
  output_dir = root_out_dir
}

executable("greenmatter") {
  sources = [ "greenmatterc.cpp", "current.cpp" ]

  include_dirs = [ "//bpf/" ]

  config_use_separate_eventloop = true
  config_use_interactive_mode = true

  defines = [
    "CONFIG_USE_SEPARATE_EVENTLOOP=${config_use_separate_eventloop}",
    "CONFIG_USE_INTERACTIVE_MODE=${config_use_interactive_mode}",
  ]

  defines += [ "CONFIG_USE_LOCAL_STORAGE" ]

  libs = [ "sockfilter", "bpf" ]
  lib_dirs = [ "//bpf/build" ]

  deps = [
    ":green",
    "${chip_root}/examples/chip-tool:chip-tool-utils",
    "${chip_root}/src/platform/logging:stdio",
  ]

  output_dir = root_out_dir
}


config("support-config") {
  include_dirs = [
    "${support_root}/include",
  ]
}

static_library("support") {
  sources = [ "timecache.cpp" ]
  public_configs = [":support-config"]
  output_dir = root_out_dir
}

executable("support-test") {
  sources = [ "test/timecache.cpp" ]

  configs += [":support-config"]

  output_dir = root_out_dir
}

group("default") {
  deps = [ ":greenmatter" ]
}
